{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development HTML\\\\sports_fitness\\\\Yoga-Fitness\\\\frontend\\\\src\\\\components\\\\water\\\\water.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./water.css\"; // Add your CSS styles here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Water = () => {\n  _s();\n  const [targetLiters, setTargetLiters] = useState(0);\n  const [currentIntake, setCurrentIntake] = useState(0);\n  const waterIncrement = 250; // 250 ml per click\n\n  const updateProgressPercentage = () => {\n    const targetMl = targetLiters * 1000;\n    return Math.min(Math.round(currentIntake / targetMl * 100), 100);\n  };\n  const handleSetGoal = () => {\n    const target = parseFloat(prompt(\"Set your daily goal (in liters):\"));\n    if (isNaN(target) || target < 0.5 || target > 5) {\n      alert(\"Please enter a valid number between 0.5 and 5 liters.\");\n      return;\n    }\n    setTargetLiters(target);\n    setCurrentIntake(0);\n    alert(`Your daily goal is set to ${target} liters.`);\n  };\n  const handleAddWater = () => {\n    if (targetLiters === 0) {\n      alert(\"Please set your daily goal first.\");\n      return;\n    }\n    setCurrentIntake(prev => {\n      const newIntake = prev + waterIncrement;\n      if (newIntake >= targetLiters * 1000) {\n        alert(\"Congratulations! You have reached your daily water intake goal!\");\n      }\n      return newIntake;\n    });\n  };\n  const handleReset = () => {\n    setCurrentIntake(0);\n    alert(\"Progress has been reset.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container5 Water\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Water Intake Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"set-target-btn\",\n        onClick: handleSetGoal,\n        children: \"Set Daily Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${updateProgressPercentage()}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: [updateProgressPercentage(), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"current-intake-text\",\n      children: [\"Current Intake: \", currentIntake, \" ml\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"add-water-btn\",\n      onClick: handleAddWater,\n      children: \"Add 250 ml\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reset-btn\",\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Water, \"Pth/3i3X15+6VBrROZRsGMN6ZRQ=\");\n_c = Water;\nexport default Water;\nvar _c;\n$RefreshReg$(_c, \"Water\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Water","_s","targetLiters","setTargetLiters","currentIntake","setCurrentIntake","waterIncrement","updateProgressPercentage","targetMl","Math","min","round","handleSetGoal","target","parseFloat","prompt","isNaN","alert","handleAddWater","prev","newIntake","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","style","width","_c","$RefreshReg$"],"sources":["D:/web development HTML/sports_fitness/Yoga-Fitness/frontend/src/components/water/water.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./water.css\"; // Add your CSS styles here\r\n\r\nconst Water = () => {\r\n  const [targetLiters, setTargetLiters] = useState(0);\r\n  const [currentIntake, setCurrentIntake] = useState(0);\r\n  const waterIncrement = 250; // 250 ml per click\r\n\r\n  const updateProgressPercentage = () => {\r\n    const targetMl = targetLiters * 1000;\r\n    return Math.min(Math.round((currentIntake / targetMl) * 100), 100);\r\n  };\r\n\r\n  const handleSetGoal = () => {\r\n    const target = parseFloat(prompt(\"Set your daily goal (in liters):\"));\r\n    if (isNaN(target) || target < 0.5 || target > 5) {\r\n      alert(\"Please enter a valid number between 0.5 and 5 liters.\");\r\n      return;\r\n    }\r\n    setTargetLiters(target);\r\n    setCurrentIntake(0);\r\n    alert(`Your daily goal is set to ${target} liters.`);\r\n  };\r\n\r\n  const handleAddWater = () => {\r\n    if (targetLiters === 0) {\r\n      alert(\"Please set your daily goal first.\");\r\n      return;\r\n    }\r\n    setCurrentIntake((prev) => {\r\n      const newIntake = prev + waterIncrement;\r\n      if (newIntake >= targetLiters * 1000) {\r\n        alert(\"Congratulations! You have reached your daily water intake goal!\");\r\n      }\r\n      return newIntake;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setCurrentIntake(0);\r\n    alert(\"Progress has been reset.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container5 Water\">\r\n      <h1>Water Intake Tracker</h1>\r\n      <div className=\"input-section\">\r\n        <button id=\"set-target-btn\" onClick={handleSetGoal}>\r\n          Set Daily Goal\r\n        </button>\r\n      </div>\r\n      <div className=\"progress-bar\">\r\n        <div\r\n          className=\"progress\"\r\n          style={{ width: `${updateProgressPercentage()}%` }}\r\n        ></div>\r\n        <span className=\"progress-text\">{updateProgressPercentage()}%</span>\r\n      </div>\r\n      <p id=\"current-intake-text\">Current Intake: {currentIntake} ml</p>\r\n      <button id=\"add-water-btn\" onClick={handleAddWater}>\r\n        Add 250 ml\r\n      </button>\r\n      <button id=\"reset-btn\" onClick={handleReset}>\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Water;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bharat\\\\OneDrive\\\\Desktop\\\\web development HTML\\\\React JS\\\\inotebook\\\\src\\\\context\\\\notes\\\\noteState.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:4000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Get all Notes\n  const getNotes = async () => {\n    //API call\n\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZkYzI5MDcxYzVlNjU1MmRhMzFmZmZjIn0sImlhdCI6MTcyNTcxMDUxM30.g-tXKSvnSm7hun1SzY_gP3sLVMUSLSKSszsLuw-hsUc\"\n      }\n    });\n    const json = await response.json();\n    console.log(\"Hey \", json);\n    setNotes(json);\n  };\n\n  // Add a Notes\n\n  const addNotes = async (title, description, tag) => {\n    //API call\n\n    const response = await fetch(`${host}/api/notes/addnotes`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZkYzI5MDcxYzVlNjU1MmRhMzFmZmZjIn0sImlhdCI6MTcyNTcxMDUxM30.g-tXKSvnSm7hun1SzY_gP3sLVMUSLSKSszsLuw-hsUc\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    console.log(json);\n    const note = {\n      _id: \"66df13800561158cda4e159a\",\n      user: \"66dc29071c5e6552da31fffc\",\n      title: title,\n      description: description,\n      tag: tag,\n      data: \"2024-09-09T15:25:52.185Z\",\n      __v: 0\n    };\n    setNotes([note, ...notes]); //This \n    console.log(note);\n  };\n\n  // Delete a Note\n  const deleteNotes = async id => {\n    // API call\n    const response = await fetch(`${host}/api/notes/deletenotes/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZkYzI5MDcxYzVlNjU1MmRhMzFmZmZjIn0sImlhdCI6MTcyNTcxMDUxM30.g-tXKSvnSm7hun1SzY_gP3sLVMUSLSKSszsLuw-hsUc\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    console.log(\"Deleting the note with id\", id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // Edit a Notes\n  const editNotes = async (id, title, description, tag) => {\n    //API call\n\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\":\n        //for login purpuse\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZkYzI5MDcxYzVlNjU1MmRhMzFmZmZjIn0sImlhdCI6MTcyNTcxMDUxM30.g-tXKSvnSm7hun1SzY_gP3sLVMUSLSKSszsLuw-hsUc\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes)); //This is use for update in frontend data and copy \n    // logic to edit in clint\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes); //set update data in database\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNotes,\n      deleteNotes,\n      editNotes,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNotes","title","description","tag","body","JSON","stringify","note","_id","user","data","__v","deleteNotes","id","newNotes","filter","editNotes","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bharat/OneDrive/Desktop/web development HTML/React JS/inotebook/src/context/notes/noteState.js"],"sourcesContent":["import React from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:4000\";\r\n  const notesInitial = [];\r\n\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  // Get all Notes\r\n  const getNotes = async () => {\r\n    //API call\r\n\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZkYzI5MDcxYzVlNjU1MmRhMzFmZmZjIn0sImlhdCI6MTcyNTcxMDUxM30.g-tXKSvnSm7hun1SzY_gP3sLVMUSLSKSszsLuw-hsUc\",\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    console.log(\"Hey \", json);\r\n\r\n    setNotes(json);\r\n  };\r\n\r\n  // Add a Notes\r\n\r\n  const addNotes = async (title, description, tag) => {\r\n    //API call\r\n\r\n    const response = await fetch(`${host}/api/notes/addnotes`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZkYzI5MDcxYzVlNjU1MmRhMzFmZmZjIn0sImlhdCI6MTcyNTcxMDUxM30.g-tXKSvnSm7hun1SzY_gP3sLVMUSLSKSszsLuw-hsUc\",\r\n      },\r\n\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json = response.json();\r\n    console.log(json);\r\n\r\n    const note = {\r\n      _id: \"66df13800561158cda4e159a\",\r\n      user: \"66dc29071c5e6552da31fffc\",\r\n      title: title,\r\n      description: description,\r\n      tag: tag,\r\n      data: \"2024-09-09T15:25:52.185Z\",\r\n      __v: 0,\r\n    };\r\n    setNotes([note,...notes]);  //This \r\n    console.log(note);\r\n  };\r\n\r\n  // Delete a Note\r\n  const deleteNotes = async (id) => {\r\n    // API call\r\n    const response = await fetch(`${host}/api/notes/deletenotes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZkYzI5MDcxYzVlNjU1MmRhMzFmZmZjIn0sImlhdCI6MTcyNTcxMDUxM30.g-tXKSvnSm7hun1SzY_gP3sLVMUSLSKSszsLuw-hsUc\",\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n    console.log(\"Deleting the note with id\", id);\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  // Edit a Notes\r\n  const editNotes = async (id, title, description, tag) => {\r\n    //API call\r\n\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": //for login purpuse\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZkYzI5MDcxYzVlNjU1MmRhMzFmZmZjIn0sImlhdCI6MTcyNTcxMDUxM30.g-tXKSvnSm7hun1SzY_gP3sLVMUSLSKSszsLuw-hsUc\",\r\n      },\r\n\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json =await response.json();\r\n    console.log(json);\r\n\r\n    let newNotes = JSON.parse(JSON.stringify(notes));   //This is use for update in frontend data and copy \r\n    // logic to edit in clint\r\n    for (let index = 0; index < newNotes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n        newNotes[index].title = title;\r\n        newNotes[index].description = description;\r\n        newNotes[index].tag = tag;\r\n        break;\r\n      }\r\n    }\r\n    setNotes(newNotes); //set update data in database\r\n  };\r\n\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{ notes, addNotes, deleteNotes, editNotes, getNotes }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}